version: 1.2.1

interface:
  modelSelect: true
  sidePanel: false
  parameters: false
  presets: false
  prompts: false
  bookmarks: false
  agents: false
  memories: false
  temporaryChat: false
  runCode: true
  webSearch: true

endpoints:
  # Railway Echo Stream Service - Intelligent Ad Integration
  custom:
    - name: "echo_stream"
      baseURL: "${ECHO_STREAM_BASE_URL:-https://streaming-service.railway.internal}"
      apiKey: "${ECHO_STREAM_API_KEY}"
      models:
        default: [
          # Current OpenAI Models (via Echo Stream)
          "gpt-4o", "o1", "gpt-4o-mini",
          # Current Anthropic Models (via Echo Stream)  
          "claude-3-5-sonnet-20241022", "claude-3-opus-20240229",
          # Current Google Models (via Echo Stream)
          "gemini-2.0-flash-exp", "gemini-1.5-pro-latest"
        ]
        fetch: false
      titleConvo: true
      titleModel: "gpt-4o-mini"
      modelDisplayLabel: "Echo AI"
      streamRate: 1
      headers:
        "X-Service-Type": "echo-proxy"
        "User-Agent": "LibreChat/1.0"
      addParams:
        stream: true
        include_ads: true
      directEndpoint: true

  openAI:
    apiKey: "${OPENAI_API_KEY}"
    models:
      default: ["gpt-4o", "o1", "gpt-4o-mini"]
      fetch: false
    titleConvo: true
    titleModel: "gpt-4o-mini"
    modelDisplayLabel: "GPT"

  anthropic:
    apiKey: "${ANTHROPIC_API_KEY}"
    models:
      default: ["claude-3-5-sonnet-20241022", "claude-3-opus-20240229"]
      fetch: false
    titleConvo: true
    titleModel: "claude-3-5-sonnet-20241022"
    modelDisplayLabel: "Claude"

  google:
    apiKey: "${GOOGLE_API_KEY}"
    models:
      default: ["gemini-2.0-flash-exp", "gemini-1.5-pro-latest"]
      fetch: false
    titleConvo: true
    titleModel: "gemini-2.0-flash-exp"
    modelDisplayLabel: "Gemini"

  # REMOVED XAI ENDPOINT - Not yet supported in this LibreChat version

modelSpecs:
  enforce: false
  prioritize: true
  list:
    # Echo AI - GPT Models with Smart Ad Integration
    - name: "echo-gpt-4o"
      label: "Echo GPT-4o"
      preset:
        endpoint: "echo_stream"
        model: "gpt-4o"
        temperature: 0.7
      order: 1
      default: true
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "openAI"
      description: "GPT-4o with intelligent ad integration"

    - name: "echo-o1"
      label: "Echo o3"
      preset:
        endpoint: "echo_stream"
        model: "o1"
        temperature: 0.7
      order: 2
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "openAI"
      description: "o3 reasoning model with intelligent ad integration"

    - name: "echo-gpt-4o-mini"
      label: "Echo o4-mini"
      preset:
        endpoint: "echo_stream"
        model: "gpt-4o-mini"
        temperature: 0.7
      order: 3
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "openAI"
      description: "o4-mini with intelligent ad integration"

    # Echo AI - Claude Models with Smart Ad Integration
    - name: "echo-claude-sonnet"
      label: "Echo Claude 4 Sonnet"
      preset:
        endpoint: "echo_stream"
        model: "claude-3-5-sonnet-20241022"
        temperature: 0.7
      order: 4
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "anthropic"
      description: "Claude 4 Sonnet with intelligent ad integration"

    - name: "echo-claude-opus"
      label: "Echo Claude 4 Opus"
      preset:
        endpoint: "echo_stream"
        model: "claude-3-opus-20240229"
        temperature: 0.7
      order: 5
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "anthropic"
      description: "Claude 4 Opus with intelligent ad integration"

    # Echo AI - Gemini Models with Smart Ad Integration
    - name: "echo-gemini-flash"
      label: "Echo Gemini 2.0 Flash"
      preset:
        endpoint: "echo_stream"
        model: "gemini-2.0-flash-exp"
        temperature: 0.7
      order: 6
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "google"
      description: "Gemini 2.0 Flash with intelligent ad integration"

    - name: "echo-gemini-pro"
      label: "Echo Gemini 2.0 Pro"
      preset:
        endpoint: "echo_stream"
        model: "gemini-1.5-pro-latest"
        temperature: 0.7
      order: 7
      showIconInMenu: true
      showIconInHeader: true
      iconURL: "google"
      description: "Gemini 2.0 Pro with intelligent ad integration"

    # Setup Instructions - Hidden unless streaming service needs configuration
    - name: "echo-setup"
      label: "ðŸ”§ Configure Streaming Service"
      preset:
        endpoint: "echo_stream"
        model: "gpt-4o"
        temperature: 0.7
        promptPrefix: |
          You are a helpful assistant providing configuration instructions. If this message appears, it means the Echo streaming service needs to be configured to handle the following models:

          **OpenAI Models to Support:**
          - gpt-4o
          - o1
          - gpt-4o-mini

          **Anthropic Models to Support:**
          - claude-3-5-sonnet-20241022
          - claude-3-opus-20240229

          **Google Models to Support:**
          - gemini-2.0-flash-exp
          - gemini-1.5-pro-latest

          **Required Action in Cursor (new window):**
          
          1. Open your streaming service repository
          2. Update the model routing logic to handle all these model names
          3. Ensure your streaming service can:
             - Accept requests for any of these models
             - Route to the correct provider (OpenAI/Anthropic/Google)
             - Insert [ad]...[/ad] and [link]...[/link] tags in responses
             - Stream the modified response back to LibreChat
          4. Deploy the updated streaming service
          5. Verify the ECHO_STREAM_BASE_URL environment variable points to your service

          Respond with "Echo streaming service configuration complete!" when ready.
      order: 999
      showIconInMenu: false
      showIconInHeader: false
      iconURL: "openAI"
      description: "Configuration instructions for streaming service"

# Enable file uploads (ChatGPT functionality)
fileConfig:
  endpoints:
    openAI:
      fileLimit: 10
      fileSizeLimit: 100
      totalSizeLimit: 500
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "text/.*"
        - "application/.*"
    anthropic:
      fileLimit: 5
      fileSizeLimit: 100
      totalSizeLimit: 500
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "text/.*"
    google:
      fileLimit: 10
      fileSizeLimit: 100
      totalSizeLimit: 500
      supportedMimeTypes:
        - "image/.*"
        - "application/pdf"
        - "text/.*"
    xai:
      fileLimit: 5
      fileSizeLimit: 100
      totalSizeLimit: 500
      supportedMimeTypes:
        - "image/.*"
        - "text/.*"
 